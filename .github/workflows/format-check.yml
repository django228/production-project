name: Format Check & Auto-fix

on:
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: write
  pull-requests: write

jobs:
  format-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        ref: ${{ github.head_ref }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Check formatting
      id: format-check
      run: |
        if ! npx prettier --check "src/**/*.{ts,tsx,scss,css,json}"; then
          echo "formatting_needed=true" >> $GITHUB_OUTPUT
        else
          echo "formatting_needed=false" >> $GITHUB_OUTPUT
        fi
        
        if ! npx eslint "src/**/*.{ts,tsx}" --max-warnings 0; then
          echo "linting_needed=true" >> $GITHUB_OUTPUT
        else
          echo "linting_needed=false" >> $GITHUB_OUTPUT
        fi
      continue-on-error: true
      
    - name: Auto-fix formatting and linting
      if: steps.format-check.outputs.formatting_needed == 'true' || steps.format-check.outputs.linting_needed == 'true'
      run: |
        npx prettier --write "src/**/*.{ts,tsx,scss,css,json}"
        npx eslint "src/**/*.{ts,tsx}" --fix
        
    - name: Check for changes after auto-fix
      id: verify-changed-files
      if: steps.format-check.outputs.formatting_needed == 'true' || steps.format-check.outputs.linting_needed == 'true'
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Commit auto-fixes
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "ðŸŽ¨ Auto-fix code formatting and linting issues"
        git push
        
    - name: Comment on PR
      if: steps.verify-changed-files.outputs.changed == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸŽ¨ **Auto-formatting applied!**\n\nCode has been automatically formatted with Prettier and ESLint. Please review the changes.'
          })